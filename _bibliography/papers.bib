---
---

@inproceedings{
qu2025cody,
title={CoDy: Counterfactual Explainers for Dynamic Graphs},
author={Zhan Qu and Daniel Gomm and Michael Faerber},
booktitle={Forty-second International Conference on Machine Learning (ICML)},
year={2025},
url={https://openreview.net/forum?id=FE9QN8d536},
bibtex_show={true},
selected={true},
abstract={Temporal Graph Neural Networks (TGNNs) are widely used to model dynamic systems where relationships and features evolve over time. Although TGNNs demonstrate strong predictive capabilities in these domains, their complex architectures pose significant challenges for explainability. Counterfactual explanation methods provide a promising solution by illustrating how modifications to input graphs can influence model predictions. To address this challenge, we present CoDy—Counterfactual Explainer for Dynamic Graphs—a model-agnostic, instance-level explanation approach that identifies counterfactual subgraphs to interpret TGNN predictions. CoDy employs a search algorithm that combines Monte Carlo Tree Search with heuristic selection policies, efficiently exploring a vast search space of potential explanatory subgraphs by leveraging spatial, temporal, and local event impact information. Extensive experiments against state-of-the-art factual and counterfactual baselines demonstrate CoDy's effectiveness, with improvements of 16% in AUFSC+ over the strongest baseline. Our code is available at: https://github.com/daniel-gomm/CoDy},
pdf={https://openreview.net/pdf?id=FE9QN8d536}
}

@inproceedings{
gomm2025metadata,
title={Metadata Matters in Dense Table Retrieval},
author={Daniel Gomm and Madelon Hulsebos},
booktitle={ELLIS workshop on Representation Learning and Generative Models for Structured Data},
abstract={Recent advances in Large Language Models have enabled powerful systems that perform tasks by reasoning over tabular data. While these systems typically assume relevant data is provided with a query, real-world use cases are mostly open-domain, meaning they receive a query without context regarding the underlying tables. Retrieving relevant tables is typically done over dense embeddings of serialized tables. Yet, there is a limited understanding of the effectiveness of different inputs and serialization methods for using such off-the-shelf text-embedding models for table retrieval. In this work, we show that different serialization strategies result in significant variations in retrieval performance. Additionally, we surface shortcomings in commonly used benchmarks applied in open-domain settings, motivating further study and refinement.},
year={2025},
url={https://openreview.net/forum?id=rELWIvq2Qy},
pdf={https://openreview.net/pdf?id=rELWIvq2Qy},
bibtex_show={true},
selected={true},
blog={https://daniel-gomm.github.io/blog/2025/Table-Serialization-Kitchen}
}
